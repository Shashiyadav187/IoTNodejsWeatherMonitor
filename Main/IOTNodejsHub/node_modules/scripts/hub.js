var hub = function (io, notification) {

    //var namespace = '/iot-node-hub';
    var iotNodeHub = io

        //.of(namespace)
        // Implémentation des namespaces à revoir dans Socketio4WinRT

        .on('connection', function (socket) {

            //http://underscorejs.org/

            var id = 1;

            var initMessage = { type: 'init', message: id };
            socket.emit('msgtocli', initMessage);
            console.log('emitted: ' + initMessage.type + ', ' + initMessage.message);
            
            socket.on('msgtosrv', function (data) {
                console.log(data);
                processReceivedData(socket,data, notification);
            });
        });

    function processReceivedData(socket,data, notification) {

        var measure = data.message;

        if (data.type === 'test') {
            var meteoMessage = { type: 'test', message: measure };
            socket.emit('msgtocli', meteoMessage);
        }

        if (data.type === 'meteo') {
            // sur l'ensemble des connexions
            var meteoMessage = { type: 'meteo', message: measure};
            socket.emit('msgtocli', meteoMessage);

            // sur le namespace
            socket.broadcast.emit('msgtocli', meteoMessage);

            // notification si dépassement de seuil
            if (measure != null) {
                if (measure.humidity > 70) {
                    SendHumidityNotification(notification, measure.humidity);
                }

                if (measure.temperature > 25) {
                    SendTemperatureNotification(notification, measure.temperature);
                }
            }
        }

        function SendHumidityNotification(notification, humidity)
        {
            var toast = "<?xml version=\"1.0\" encoding=\"utf-8\"?>" +
                "<toast>" +
                "<visual>" +
                "<binding template=\"ToastText04\">" +
                "<text id=\"1\">Alerte humidite</text>" +
                "<text id=\"2\"> Derniere mesure : " + humidity + " %</text>" +
                    "</binding>" +
                "</visual>" +
                "</toast>";

            //var optionsOrCallback = { 'headers:': 'content-type:application/atom+xml;type=entry;charset=utf-8' };
            //var optionsOrCallback = { 'headers:': 'content-type:charset=utf-8,content-length:' + toast.length };
            var optionsOrCallback = 3;

            notification.wns.send(null, toast, "wns/toast", optionsOrCallback, function (error) {
                if (error) {
                    console.error(error);
                }
            });
        }

        function SendTemperatureNotification(notification, temperature)
        {
            var toast = "<?xml version=\"1.0\" encoding=\"utf-8\"?>" +
                "<toast>" +
                "<visual>" +
                "<binding template=\"ToastText04\">" +
                    "<text id=\"1\">Alerte temperature</text>" +
                    "<text id=\"2\">Derniere mesure : " + temperature + " degres</text>" +
                    "</binding>" +
                "</visual>" +
                "</toast>";

            //var optionsOrCallback = { 'headers:': 'content-type:application/atom+xml;type=entry;charset=utf-8' };
            //var optionsOrCallback = { 'headers:': 'content-type:charset=utf-8,content-length:' + toast.length };
            var optionsOrCallback = 3;

            notification.wns.send(null, toast, "wns/toast", optionsOrCallback, function (error) {
                if (error) {
                    console.error(error);
                }
            });
        }
    }
};

exports.init = hub;